replicaCount: 1

nameOverride: ""
fullnameOverride: ""

timeZone: America/SaoPaulo

secretKey: "supersecurerandomstring"
jwtSecret: "supersecurerandomstring2"

server:
  image:
    repository: amruthpillai/reactive-resume
    pullPolicy: IfNotPresent
    tag: server-latest
  imagePullSecrets: []
  service:
    type: ClusterIP
    port: 3100
    targetPort: 3100
  url: https://resume.yourhost.com/api/
  traefikIngress: {}
  #  annotations: {}
  #  host: resume.yourhost.com
  #  entryPoints:
  #    - websecure
  #  tls:
  #    secretName: resume-tls
  auth:
    google:
      clientID: ""
      clientSecret: ""
client:
  image:
    repository: amruthpillai/reactive-resume
    pullPolicy: IfNotPresent
    tag: client-latest
  imagePullSecrets: []
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  url: https://resume.yourhost.com/
  traefikIngress: {}
  #  annotations: {}
  #  host: resume.yourhost.com
  #  entryPoints:
  #    - websecure
  #  tls:
  #    secretName: resume-tls

storage:
  bucket: ""
  region: ""
  endpoint: ""
  urlPrefix: ""
  accessKey: ""
  secretKey: ""

certManagerCertificate: {}
#  commonName: resume.yourhost.com
#  dnsNames:
#    - resume.yourhost.com
#  issuer:
#    kind: ClusterIssuer
#    name: letsencrypt
#
#  secretName: resume-tls

postgresql:
  enabled: true
  auth:
    username: resume
    password: resume
    database: resume

  image:
    repository: postgres
    tag: latest

  primary:
    persistence:
      enabled: true
      ##
      ## Persistant class
      # storageClass: classname
      ##
      ## Access modes:
      accessModes:
        - ReadWriteOnce
    ## PostgreSQL port
    service:
      ports:
        postgresql: "5432"
